openapi: 3.1.0
info:
  title: Phonic
  description: The next-generation voice AI platform to build, observe, and evaluate your voice AI agents.
  license:
    name: MIT
  version: 1.0.0
servers:
  - url: https://api.phonic.co/v1
security:
  - bearerAuth: []
paths:
  /agents:
    get:
      description: Returns all agents in a project.
      parameters:
        - name: project
          in: query
          description: The name of the project to list agents for.
          required: false
          schema:
            type: string
            default: main
          example: my-project
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  agents:
                    type: array
                    items:
                      $ref: '#/components/schemas/Agent'
                required:
                  - agents
              example:
                agents:
                  - $ref: '#/components/examples/AgentExample/value'
      x-codeSamples:
        - lang: typescript
          source: |
            import { Phonic } from "phonic";

            const phonic = new Phonic("ph_...");

            const agentsResult = await phonic.agents.list({
              project: "customer-support"
            });
        - lang: python
          source: |
            TODO
  /agents/{nameOrId}:
    get:
      description: Returns a specific agent by name or ID.
      parameters:
        - name: nameOrId
          in: path
          description: The name or the ID of the agent to get.
          required: true
          schema:
            type: string
          example: support-agent
        - name: project
          in: query
          description: The name of the project containing the agent. Only used when looking up by name.
          required: false
          schema:
            type: string
            default: main
          example: my-project
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    $ref: '#/components/schemas/Agent'
                required:
                  - agent
              example:
                agent:
                  $ref: '#/components/examples/AgentExample/value'
      x-codeSamples:
        - lang: typescript
          source: |
            import { Phonic } from "phonic";

            const phonic = new Phonic("ph_...");

            const agent = await phonic.agents.get("support-agent");
        - lang: python
          source: |
            TODO
components:
  schemas:
    Agent:
      type: object
      properties:
        id:
          type: string
          description: The ID of the agent.
        name:
          type: string
          description: The name of the agent.
        phone_number:
          type: [string, 'null']
          description: The phone number that the agent uses to accept and initiate phone calls. `null` if the agent is not associated with a phone number, in which can the agent can be used via WebSockets.
        project:
          type: object
          description: The project the agent belongs to.
          properties:
            id:
              type: string
            name:
              type: string
          required:
            - id
            - name
        timezone:
          type: string
          description: The timezone of the agent.
          example: America/Los_Angeles
        voice_id:
          type: string
          description: The voice ID of the agent.
        audio_format:
          type: string
          enum:
            - pcm_44100
            - mulaw_8000
          description: The audio format of the agent. If the agent has a phone number, the audio format will be `mulaw_8000`.
        welcome_message:
          type: [string, 'null']
          description: The welcome message that the agent will say, or `null` if the agent does not have a welcome message.
        system_prompt:
          type: string
          description: The system prompt that the agent will use to guide its behavior.
        template_variables:
          type: object
          additionalProperties:
            type: object
            properties:
              default_value:
                type: [string, 'null']
            required:
              - default_value
          description: Template variables that the agent can use in the welcome message and the system prompt.
          example:
            customer_name:
              default_value: null
            discount:
              default_value: 10%
        tools:
          type: array
          items:
            anyOf:
              - type: string
                enum:
                  - keypad_input
                  - natural_conversation_ending
                description: Built-in tool
              - type: string
                description: Custom tool
                example: send_email
          description: List of tools available to the agent.
        no_input_poke_sec:
          type: [integer, 'null']
          description: Number of seconds of silence before sending a poke message. `null` if the agent does not send a poke message.
        no_input_poke_text:
          type: string
          description: The message to send after the specified silence.
        no_input_end_conversation_sec:
          type: integer
          description: Seconds of silence before ending the conversation.
        boosted_keywords:
          type: array
          items:
            type: string
          description: These words, or short phrases, will be more accurately recognized by the agent.
        configuration_endpoint:
          type: [object, 'null']
          properties:
            url:
              type: string
              example: https://api.example.com/webhooks/phonic-config
            headers:
              type: object
              additionalProperties:
                type: string
              example:
                Authorization: Bearer token123
            timeout_ms:
              type: integer
              description: The timeout for the configuration endpoint in milliseconds.
          required:
            - url
            - headers
            - timeout_ms
          description: When not `null`, the agent will call this endpoint to get configuration options.
      required:
        - id
        - name
        - project
        - timezone
        - voice_id
        - audio_format
        - welcome_message
        - system_prompt
        - template_variables
        - tools
        - no_input_poke_sec
        - no_input_poke_text
        - no_input_end_conversation_sec
        - boosted_keywords
        - configuration_endpoint
        - phone_number
  examples:
    AgentExample:
      value:
        id: agent_12cf6e88-c254-4d3e-a149-a7f1bdd22783
        name: support-agent
        phone_number: '+1234567890'
        project:
          id: proj_ad0334f1-2487-4155-9df3-abd8129b29ad
          name: customer-support
        timezone: America/Los_Angeles
        voice_id: grant
        audio_format: pcm_44100
        welcome_message: Hey {{customer_name}}. How can I help you today?
        system_prompt: You are an expert in {{subject}}. Be friendly, helpful and concise.
        template_variables:
          customer_name:
            default_value: null
          subject:
            default_value: Chess
        tools:
          - keypad_input
        no_input_poke_sec: 30
        no_input_poke_text: Are you still there?
        no_input_end_conversation_sec: 180
        boosted_keywords:
          - appointment
          - booking
          - cancel
        configuration_endpoint:
          url: https://api.example.com/config
          headers:
            Authorization: Bearer token123
          timeout_ms: 2000
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer 